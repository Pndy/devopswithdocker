version: '3.5'

services:
  nginx:
    image: nginx:stable
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
     - 80:80
    networks:
      - example-network
    depends_on:
      - "backend"
      - "frontend"

  backend:
    image: hellobackend:1.14
    container_name: example-backend
    expose:
      - 8080
    environment:
      - REDIS_HOST=redis_cont
      - POSTGRES_HOST=postgres_cont
    depends_on:
      - "redis"
      - "postgres"
    networks:
      - example-network

  redis:
    image: redis
    restart: unless-stopped
    container_name: redis_cont
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - example-network

  postgres:
    image: postgres
    restart: unless-stopped
    container_name: postgres_cont
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - example-network

  frontend:
    image: hellofrontend:1.14
    container_name: example-frontend
    expose:
      - 5000
    networks:
      - example-network

networks:
  example-network:
